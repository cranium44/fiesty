version: 2.1

orbs:
  gradle: circleci/gradle@2.1.0

reference:
  ## Paths
  gradle_cache_path: &gradle_cache_path
                       gradle_cache-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
  gems_cache_path: &gems_cache_path
                     gems_cache-{{ checksum "Gemfile.lock" }}
  workspace: &workspace
               ~/src

  ## Configurations
  android_config: &android_config
    working_directory: *workspace
    macos:
      xcode: "9.4.0"
    shell: /bin/bash --login -eo pipefail
    environment:
      TERM: dumb
      JVM_OPTS: -Xmx3200m # Look at options

  ## Cache
  restore_gradle_cache: &restore_gradle_cache
    restore_cache:
      key: *gradle_cache_path

  restore_gems_cache: &restore_gems_cache
    restore_cache:
      key: *gems_cache_path

  save_gradle_cache: &save_gradle_cache
    save_cache:
      key: *gradle_cache_path
      paths:
        - ~/.gradle

  save_gems_cache: &save_gems_cache
    save_cache:
      key: *gems_cache_path
      paths:
        - vendor/bundle

  ## Dependencies
  ruby_dependencies: &ruby_dependencies
    run:
      name: Download Ruby Dependencies
      command: bundle check || bundle install --path vendor/bundle

  android_dependencies: &android_dependencies
    run:
      name: Download Android Dependencies
      command: ./gradlew androidDependencies

jobs:
  build:
    working_directory: *workspace
    docker:
      - image: circleci/android:api-29
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      #     - run:
      #         name: Create release.keystore.jks
      #         command: echo "$RELEASE_KEYSTORE_BASE64" | base64 -d > $releaseKeystore
      #     - run:
      #         name: Create keystore.properies
      #         command: printf 'keyAlias=%s\nkeyPassword=%s\nstoreFile=%s\nstorePassword=%s' $keyAlias $keyPassword $storeFile $storePassword > config/keystore.properties
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}
      - run:
          name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
          command: sudo chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}
      - run:
          name: Run Tests
          command: ./gradlew lint test
      - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: app/build/reports
          destination: reports
      - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: app/build/test-results # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples

  deploy_beta:
    working_directory: *workspace
    docker:
      - image: circleci/android:api-29
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      # Gradle and ruby/fastlane dependencies
      - *restore_gradle_cache
      - *android_dependencies
      - *save_gradle_cache
      - *restore_gems_cache
      - *ruby_dependencies
      - *save_gems_cache
      - run:
          name: Run Fastlane
          command: bundle exec fastlane beta build_number:<< pipeline.id >>


workflows:
  version: 2
  commit-workflow:
    jobs:
      - build
      - deploy_beta:
          requires:
            - build
          filters:
            branches:
              only:
                - master